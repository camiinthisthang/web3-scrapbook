pragma solidity ^0.8.4;

import "@openzeppelin/contracts/utils/Counters.sol";

contract BirthdayCard {
    using Counters for Counters.Counter;
    Counters.Counter private _eventId;

    constructor(){
        _eventId.increment();
    }

    struct Card {
    bytes32 eventId;
      string cardMessageCID;
      address cardReciever;   
      address[] signers;
      bool moneySent;
      uint256 eventTimestamp;
    }

    mapping(bytes32 => Card) public idToEvent;

    function createNewCard(
        address cardMessageCID,
        address reciever,
        uint eventTimestamp
    ) external {
        //get random ID generated by chainlink
        address[] memory signers;
        _eventId.increment();
        address cardReciever = reciever;
        idToEvent[_eventId] = Card(_eventId, cardMessageCID, cardReciever,  signers, false, eventTimestamp);


    }

}
